secret_detection:
  stage: test
  artifacts:
    reports:
      secret_detection: gl-secret-detection-report.json
    paths:
      - gl-secret-detection-report.json
  rules:
    - if: '$SECRET_DETECTION_DISABLED =~ /true/i'
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: '$CI_COMMIT_BRANCH =~ $DEV_OR_RELEASE_REGEX'
    - if: $CI_PIPELINE_SOURCE == "web"


secret_detection_validation:
  stage: report_processing
  image: "${IMAGE_PREFIX}python:3.11-rc-alpine"
  script:
    - echo 'Checking for secrets'
    - test -e gl-secret-detection-report.json || exit 0
    - wget https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/release/1.3/lib/gitlab/ci/templates/references/security/validate_secret_scan.py
    - python3 validate_secret_scan.py gl-secret-detection-report.json $EXCLUDED_SECRET_IDS
  rules:
    - if: '$SECRET_DETECTION_DISABLED =~ /true/i'
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: '$CI_COMMIT_BRANCH =~ $DEV_OR_RELEASE_REGEX'
    - if: $CI_PIPELINE_SOURCE == "web"
