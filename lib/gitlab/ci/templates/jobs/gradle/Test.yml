variables:
  JACOCO_OUTPUT_DIR: "build/aggregate"
  JACOCO_HTML_LOCATION: "$JACOCO_OUTPUT_DIR/html/index.html"
  JACOCO_XML_LOCATION: "$JACOCO_OUTPUT_DIR/jacocoTestReport.xml"

test_java:
  stage: test
  script:
    - echo "Running tests with flags '$GRADLE_TEST_FLAGS'"
    - echo "CI_COMMIT_TAG = '$CI_COMMIT_TAG'"
    - ./gradlew test buildJacocoAggregate $GRADLE_TEST_FLAGS
  artifacts:
    when: always
    paths:
      - $JACOCO_OUTPUT_DIR
      - ./build/reports/jacoco/
    reports:
      junit:
        - "**/TEST-*.xml"
    expire_in: 7 days
  rules:
    # Don't rebuild when tags are committed
    - if: '$TEST_JAVA_DISABLED =~ /true/i'
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: '$CI_COMMIT_BRANCH =~ $DEV_REGEX'
    - if: $CI_PIPELINE_SOURCE == "web"

visualize_test_coverage:
  stage: test
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  script:
    - echo "Jacoco XML report location - '$JACOCO_XML_LOCATION'"
    - echo "Jacoco HTML report location - '$JACOCO_HTML_LOCATION'"
    # GitLab CI "exist" rule doesn't account for artifacts, so we need to check manually
    - test -e $JACOCO_XML_LOCATION || (echo "XML report not found" & exit 0)
    - test -e $JACOCO_HTML_LOCATION || (echo "HTML report not found" & exit 0)
    - mkdir -p build/reports/jacoco
    - 'python /opt/cover2cover.py $JACOCO_XML_LOCATION src/main/java > ./build/reports/jacoco/cobertura.xml'
    - 'python /opt/source2filename.py ./build/reports/jacoco/cobertura.xml'
    - cat $JACOCO_HTML_LOCATION | grep -o 'Total[^%]*%'
  coverage: '/Total.*?([0-9]{1,3})%/'
  needs: [ "test_java" ]
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: "**/cobertura.xml"
  rules:
    - if: '$TEST_JAVA_DISABLED =~ /true/i'
      when: never
    - if: '$VISUALIZE_TEST_COVERAGE_DISABLED =~ /true/i'
      when: never
    # Don't rebuild when tags are committed
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "web"