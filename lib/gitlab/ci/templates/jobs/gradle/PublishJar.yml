variables:
  GIT_TASKS_ENABLED: "true"
  DEV_REGEX: develop
  RELEASE_REGEX: '^develop$|^v3-develop$|^v2-develop$|^[0-9]+\.[0-9]+$|^release\/.+$'
  RELEASE:
    value: ""
    description: Determines what type of jar should be produced. Leave blank to produce a SNAPSHOT, use "FINAL" to create a final release, or use any other value to produce a release candidate.

publish_javadocs:
  stage: publish
  rules:
    - if: $SKIP_PUBLISH_JAVADOCS
      when: never
    - if: $CI_COMMIT_TAG != null
      when: never
    - if: $RELEASE
      when: never
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH && $CI_COMMIT_TAG && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH ||  $CI_COMMIT_BRANCH =~ $DEV_REGEX)
  script:
    - echo "CI Pipeline Source = '$CI_PIPELINE_SOURCE'
    - ./gradlew javadoc -x build -x test
  artifacts:
    paths:
      - "build/docs/javadoc"
      - "*/build/docs/javadoc"

publish_snapshot_jar:
  stage: publish
  script:
    - echo "CI Pipeline Source = '$CI_PIPELINE_SOURCE'
    - echo "Publishing with flags '$STANDARD_GRADLE_FLAGS $PUBLISH_JAR_GRADLE_FLAGS'
    - ./gradlew $STANDARD_GRADLE_FLAGS $PUBLISH_JAR_GRADLE_FLAGS -PforcePublish -Pgitlab -Pjenkins publish
  rules:
    - if: $SKIP_PUBLISH_SNAPSHOT_JAR
      when: never
    - if: $CI_COMMIT_TAG != null
      when: never
    - if: $RELEASE
      when: never
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH && $CI_COMMIT_TAG && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH ||  $CI_COMMIT_BRANCH =~ $DEV_REGEX)

publish_release_jar:
  stage: publish
  script:
    - if [[ $CI_COMMIT_BRANCH =~ $RELEASE_REGEX ]]; then IS_RELEASE_BRANCH="true"; else IS_RELEASE_BRANCH=""; fi
    - if [[ -z "$IS_RELEASE_BRANCH" ]]; then
      echo "You can not run release builds off of branch $CI_COMMIT_BRANCH";
      exit 1;
      fi
    - if [[ $(echo $RELEASE | tr '[:upper:]' '[:lower:]') == "final" ]] ; then
      echo "FINAL BUILD";
      RC_FLAG=-Pfinal;
      else
      echo "RC build $RELEASE";
      RC_FLAG=-Prc=${RELEASE};
      fi
    # checkout a named branch instead of a SHA (to keep the BSP happy)
    - echo "Check out $CI_COMMIT_BRANCH"
    - git checkout -q -b $CI_COMMIT_BRANCH origin/$CI_COMMIT_BRANCH
    - ./gradlew $STANDARD_GRADLE_FLAGS $RELEASE_GRADLE_FLAGS $PUBLISH_JAR_GRADLE_FLAGS -Pforce -Prelease $RC_FLAG build
  rules:
    - if: $SKIP_PUBLISH_RELEASE_JAR
      when: never
    - if: $CI_COMMIT_TAG != null
      when: never
    # Only when manually invoked from the web UI and RELEASE has a non-empty value
    - if: $CI_PIPELINE_SOURCE == "web" && $RELEASE