variables:
  SAFE_TEST:
    value: "false"
    description: "Run a test to check the build pipeline before actually deploying, when set to \"true\"."
  TASK_ARGUMENTS:
    value: ""
    description: "Add any additional gradle commands for this build here. ex: \"-Pforce -x updateReleaseVersion\""
  BASE_GRADLE_FLAGS: '-s --no-daemon -PnoMavenLocal --refresh-dependencies --console=plain $TASK_ARGUMENTS'
  STANDARD_GRADLE_FLAGS: "$BASE_GRADLE_FLAGS" #This is modified during workflow rules
  GRADLE_TEST_FLAGS: "$STANDARD_GRADLE_FLAGS $EXTRA_GRADLE_TEST_FLAGS"
  INSTALLER_GRADLE_FLAGS: "$GRADLE_FLAGS -Pi4jLicenseKey=${I4J_LICENSE_KEY} -PnoMavenLocal"
  DEV_OR_RELEASE_REGEX: '^develop$|^v3-develop$|^v2-develop$|^[0-9]+\.[0-9]+$|^release\/.+$'
  IMAGE_PREFIX: ""
  DEFAULT_IMAGE: "openjdk:11"
  GITLAB_FEATURES: "$GITLAB_FEATURES|dependency_scanning"
  QUALITY_CHECK_GRADLE_TASKS: pmdMain violations -x build -x test
  QUALITY_CHECK_DISABLED: "true"
  DEPENDENCY_LICENSE_SCANNING_DISABLED: "true"
  SAST_DISABLED: "true"

default:
  image: ${IMAGE_PREFIX}$DEFAULT_IMAGE

include:
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - remote: https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/release/1.2/lib/gitlab/ci/templates/references/certs/CertificateOfAuthoritySetup.yml
  - remote: https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/release/1.2/lib/gitlab/ci/templates/references/gradle/GradleWrapperSetup.yml
  - remote: https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/release/1.2/lib/gitlab/ci/templates/jobs/gradle/Test.yml
  - remote: https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/release/1.2/lib/gitlab/ci/templates/jobs/gradle/PublishJar.yml
  - remote: https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/release/1.2/lib/gitlab/ci/templates/jobs/gradle/SecretDetection.yml
  - remote: https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/release/1.2/lib/gitlab/ci/templates/jobs/gradle/QualityReporting.yml
  - remote: https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/release/1.2/lib/gitlab/ci/templates/jobs/gradle/DependencyScanning.yml
  - remote: https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/release/1.2/lib/gitlab/ci/templates/jobs/gradle/LicenseScanning.yml
  - remote: https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/release/1.2/lib/gitlab/ci/templates/jobs/gradle/StaticApplicationSecurityTesting.yml
  - remote: https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/feature/auto-configure-license-quality-scans/lib/gitlab/ci/templates/jobs/gradle/StaticApplicationSecurityTesting.yml

test_java:
  before_script:
    - !reference [ .configure_gradle_wrapper, script ]
    - !reference [ .update_trust_store, script ]

pages:
  before_script:
    - !reference [ .configure_gradle_wrapper, script ]
    - !reference [ .update_trust_store, script ]

publish_snapshot_jar:
  before_script:
    - !reference [ .configure_gradle_wrapper, script ]
    - !reference [ .update_trust_store, script ]

publish_release_jar:
  before_script:
    - !reference [ .configure_gradle_wrapper, script ]
    - !reference [ .update_trust_store, script ]

stages:
  - test
  - report_processing
  - publish
  - repo_management

workflow:
  rules:
    - if: '$SAFE_TEST =~ /true/i'
      variables:
        STANDARD_GRADLE_FLAGS: '$BASE_GRADLE_FLAGS -PsafeTest'
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH =~ $DEV_OR_RELEASE_REGEX
    - if: $CI_PIPELINE_SOURCE == "web"
