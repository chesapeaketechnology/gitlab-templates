
include:
  - remote: https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/release/1.3/lib/gitlab/ci/templates/references/gradle/GradleWrapperSetup.yml

cache:
  key: ${CI_PROJECT_ID}
  paths:
    - .gradle/

.debug_rules: &debug_rules
  - if: $CI_COMMIT_TAG
    when: never # Never build debug builds for tags
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: $CI_PIPELINE_SOURCE == "web"

variables:
  IMAGE_PREFIX: ""
  DEFAULT_IMAGE: "jangrewe/gitlab-ci-android"
  DEPLOY_DEBUG_APK_SLACK_MESSAGE: "Hello Team! Here is the latest debug APK from branch ${CI_COMMIT_REF_NAME}. It was triggered by: ${CI_PIPELINE_SOURCE}."
  DEPLOY_DEBUG_APK_PATH: app/build/outputs/apk/debug
  DEPLOY_DEBUG_APK_NAME: yourdebugapkname
  APK_SLACK_CHANNEL_ACCESS_TOKEN: ""
  APK_SLACK_CHANNEL_ID: ""

default:
  image: ${IMAGE_PREFIX}$DEFAULT_IMAGE

before_script:
  - !reference [ .configure_gradle_wrapper, script ]

stages:
  - test
  - assembleDebug
  - deployDebug

testDebug:
  stage: test
  rules: *debug_rules
  script:
    - ./gradlew -Pci --console=plain testDebug
  artifacts:
    when: always
    reports:
      junit:
        - "**TEST-*.xml"

assembleDebugApk:
  stage: assembleDebug
  rules: *debug_rules
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/apk/debug

deployDebugApk:
  stage: deployDebug
  rules: *debug_rules
  allow_failure: true
  script:
    - if [ -z "${APK_SLACK_CHANNEL_ACCESS_TOKEN}" ]; then echo "APK_SLACK_CHANNEL_ACCESS_TOKEN is unset so not pushing message to Slack"; else echo "APK_SLACK_CHANNEL_ACCESS_TOKEN is set to '$APK_SLACK_CHANNEL_ACCESS_TOKEN'"; fi
    - if [ -z "${APK_SLACK_CHANNEL_ID}" ]; then echo "APK_SLACK_CHANNEL_ID is unset so not pushing message to Slack"; else echo "APK_SLACK_CHANNEL_ACCESS_TOKEN is set to '$APK_SLACK_CHANNEL_ID'"; fi
    - if [ -z "${DEPLOY_DEBUG_APK_SLACK_MESSAGE}" ]; then echo "$DEPLOY_DEBUG_APK_SLACK_MESSAGE is unset so will use empty message for Slack"; else echo "$DEPLOY_DEBUG_APK_SLACK_MESSAGE is set to '$DEPLOY_DEBUG_APK_SLACK_MESSAGE'"; fi
    - debug_apk_file=$(find $DEPLOY_DEBUG_APK_PATH -name *$DEPLOY_DEBUG_APK_NAME*)
    - |
      curl \
        -F token="${APK_SLACK_CHANNEL_ACCESS_TOKEN}" \
        -F channels="${APK_SLACK_CHANNEL_ID}" \
        -F initial_comment="$DEPLOY_DEBUG_APK_SLACK_MESSAGE" \
        -F "file=@$debug_apk_file" \
        https://slack.com/api/files.upload
  cache: {}

workflow:
  rules: # Trigger pipeline:
    - if: $CI_MERGE_REQUEST_IID # if this is part of an MR
    - if: $CI_COMMIT_TAG # if this is a release
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH # if this is a push to develop
    - if: '$CI_COMMIT_BRANCH =~ $DEV_OR_RELEASE_REGEX' # if this is a push to a release branch
    - if: $CI_PIPELINE_SOURCE == "web" # if triggered from the Gitlab UI
