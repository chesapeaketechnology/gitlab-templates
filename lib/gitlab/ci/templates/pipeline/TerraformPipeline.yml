variables:
  TF_ROOT:
    value: ${CI_PROJECT_DIR}
    description: "The root directory of your terraform project"
  PLAN_FILE_NAME: planfile
  TF_STATE_NAME: default
  TF_CACHE_KEY: default
  IMAGE_PREFIX: ""
  DEFAULT_IMAGE: "hashicorp/terraform:latest"
  TF_INIT_FLAGS: ""
  IS_TERRAFORM_MODULE: "false"

default:
  interruptible: true
  image:
    name: ${IMAGE_PREFIX}$DEFAULT_IMAGE
    entrypoint:
    - 'usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

include:
  - template: Jobs/Secret-Detection.gitlab-ci.yml
  - template: Security/SAST-IaC.gitlab-ci.yml
  - remote: https://raw.githubusercontent.com/chesapeaketechnology/gitlab-templates/release/2.x.x/lib/gitlab/ci/templates/jobs/security/CheckovIacSast.yml

cache:
  key: "${TF_ROOT}"
  paths:
    - ${TF_ROOT}/.terraform/

stages:
  - test
  - apply
  - destroy

fmt:
  stage: test
  script:
    - cd "${TF_ROOT}"
    - terraform fmt
  allow_failure: true

validate:
  stage: test
  script:
    - terraform init $TF_INIT_FLAGS
    - cd "${TF_ROOT}"
    - terraform validate
  rules:
    - if: '$IS_TERRAFORM_MODULE =~ /true/i'
      when: never

plan:
  stage: test
  script:
    - cd "${TF_ROOT}"
    - terraform init $TF_INIT_FLAGS
    - terraform plan -input=false -out "$PLAN_FILE_NAME"
  resource_group: ${TF_STATE_NAME}
  rules:
    - if: '$IS_TERRAFORM_MODULE =~ /true/i'
      when: never
  artifacts:
    when: always
    paths:
      - ${TF_ROOT}/$PLAN_FILE_NAME

apply:
  stage: apply
  script:
    - cd "${TF_ROOT}"
    - terraform init $TF_INIT_FLAGS
    - terraform apply -auto-approve -input=false "$PLAN_FILE_NAME"
  resource_group: ${TF_STATE_NAME}
  rules:
    - if: '$IS_TERRAFORM_MODULE =~ /true/i'
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual

destroy:
  stage: destroy
  script:
    - cd "${TF_ROOT}"
    - terraform init $TF_INIT_FLAGS
    - terraform destroy -auto-approve
  resource_group: ${TF_STATE_NAME}
  rules:
    - if: '$IS_TERRAFORM_MODULE =~ /true/i'
      when: never
  when: manual
